"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[81955],{85407:(e,a)=>{function t(e,a){var t,s,i,l,n;return e.format?e.format:e.allOf?"string"==typeof e.allOf[0]&&e.allOf[0].includes("circular")?e.allOf[0]:"object":e.oneOf||e.anyOf?"object":"object"===e.type?null!=(s=null==(t=e.xml)?void 0:t.name)?s:e.type:"array"===e.type?null!=(l=null==(i=e.xml)?void 0:i.name)?l:e.type:null!=(n=e.title)?n:e.type}a.A4=a.uc=void 0,a.uc=function(e,a){var s;return e.items?t(e.items)+"[]":null!=(s=t(e))?s:""},a.A4=function e(a){if(!a)return;if(a.items&&void 0===a.minItems&&void 0===a.maxItems)return e(a.items);let t=[];if(a.items&&a.items.enum&&a.items.enum&&t.push(`[${a.items.enum.map((e=>`\`${e}\``)).join(", ")}]`),a.minLength||a.maxLength){let e,s,i="";a.minLength&&a.minLength>1&&(e=`\`>= ${a.minLength} characters\``),a.minLength&&1===a.minLength&&(e="`non-empty`"),a.maxLength&&(s=`\`<= ${a.maxLength} characters\``),e&&!s&&(i+=e),s&&!e&&(i+=s),e&&s&&(i+=`${e} and ${s}`),t.push(i)}if(a.minimum||a.maximum||"number"==typeof a.exclusiveMinimum||"number"==typeof a.exclusiveMaximum){let e,s,i="";"number"==typeof a.exclusiveMinimum?e=`\`> ${a.exclusiveMinimum}\``:a.minimum&&!a.exclusiveMinimum?e=`\`>= ${a.minimum}\``:a.minimum&&!0===a.exclusiveMinimum&&(e=`\`> ${a.minimum}\``),"number"==typeof a.exclusiveMaximum?s=`\`< ${a.exclusiveMaximum}\``:a.maximum&&!a.exclusiveMaximum?s=`\`<= ${a.maximum}\``:a.maximum&&!0===a.exclusiveMaximum&&(s=`\`< ${a.maximum}\``),e&&!s&&(i+=e),s&&!e&&(i+=s),e&&s&&(i+=`${e} and ${s}`),t.push(i)}a.pattern&&t.push(`Value must match regular expression \`${a.pattern}\``);const s=a;if(s.mapping){const e=Object.keys(s.mapping);t.push(`[${e.map((e=>`\`${e}\``)).join(", ")}]`)}return a.enum&&t.push(`[${a.enum.map((e=>`\`${e}\``)).join(", ")}]`),a.minItems&&t.push(`\`>= ${a.minItems}\``),a.maxItems&&t.push(`\`<= ${a.maxItems}\``),0!==t.length?"**Possible values:** "+t.join(", "):void 0}},34168:(e,a,t)=>{t.d(a,{Z:()=>y});var s=t(67294),i=t(58750),l=t(82479),n=t(62574),m=t(94693),r=t(85407),o=t(52347),c=t(25365),p=t(88453),d=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;const y=function({param:{description:e,example:a,examples:t,name:y,required:f,schema:g}}){g&&(null==g?void 0:g.type)||(g={type:"any"});const k=(0,o.lo)(g,(e=>s.createElement("span",{className:"openapi-schema__type"}," ",(0,r.uc)(e)))),T=(0,o.lo)(f,(()=>s.createElement("span",{className:"openapi-schema__required"},"required"))),b=(0,o.lo)((0,r.A4)(g),(e=>s.createElement("div",null,s.createElement(c.D,{children:(0,m.T)(e),rehypePlugins:[p.Z]})))),x=(0,o.lo)(e,(e=>s.createElement("div",null,s.createElement(c.D,{children:(0,m.T)(e),components:{pre:"div",code(e){var a=e,{node:t,inline:l,className:n,children:m}=a;((e,a)=>{var t={};for(var s in e)u.call(e,s)&&a.indexOf(s)<0&&(t[s]=e[s]);if(null!=e&&d)for(var s of d(e))a.indexOf(s)<0&&h.call(e,s)&&(t[s]=e[s])})(a,["node","inline","className","children"]);const r=/language-(\w+)/.exec(n||"");return l?s.createElement("code",null,m):!l&&r?s.createElement(i.Z,{className:n},m):s.createElement(i.Z,null,m)}},rehypePlugins:[p.Z]})))),v=(0,o.lo)(g&&g.items?g.items.default:g?g.default:void 0,(e=>s.createElement("div",null,s.createElement(c.D,{children:`**Default value:** \`${e}\``})))),N=(0,o.lo)((0,o.toString)(a),(e=>s.createElement("div",null,s.createElement("strong",null,"Example: "),e))),S=(0,o.lo)(t,(e=>{const a=Object.entries(e);return s.createElement(s.Fragment,null,s.createElement("strong",null,"Examples:"),s.createElement(l.default,null,a.map((([e,a])=>s.createElement(n.default,{value:e,label:e},a.summary&&s.createElement("p",null,a.summary),a.description&&s.createElement("p",null,s.createElement("strong",null,"Description: "),s.createElement("span",null,a.description)),s.createElement("p",null,s.createElement("strong",null,"Example: "),s.createElement("code",null,a.value)))))))}));return s.createElement("div",{className:"openapi-params__list-item"},s.createElement("span",{className:"openapi-schema__container"},s.createElement("strong",{className:"openapi-schema__property"},y),k,f&&s.createElement("span",{className:"openapi-schema__divider"}),T),b,v,x,N,S)}},33241:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>E,contentTitle:()=>S,default:()=>Z,frontMatter:()=>N,metadata:()=>I,toc:()=>q});var s=t(3905),i=t(68562),l=t(67001),n=t.n(l),m=t(98439),r=t(34168),o=t(3655),c=t(13503),p=t(82479),d=t(62574),u=Object.defineProperty,h=Object.defineProperties,y=Object.getOwnPropertyDescriptors,f=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,T=(e,a,t)=>a in e?u(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,b=(e,a)=>{for(var t in a||(a={}))g.call(a,t)&&T(e,t,a[t]);if(f)for(var t of f(a))k.call(a,t)&&T(e,t,a[t]);return e},x=(e,a)=>h(e,y(a)),v=(e,a)=>{var t={};for(var s in e)g.call(e,s)&&a.indexOf(s)<0&&(t[s]=e[s]);if(null!=e&&f)for(var s of f(e))a.indexOf(s)<0&&k.call(e,s)&&(t[s]=e[s]);return t};const N={id:"put-policy-schedule",sidebar_label:"Update SOD Policy schedule",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"put api-method",info_path:"docs/api/beta/identity-security-cloud-beta-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'Update SOD Policy schedule' (put-policy-schedule)"},S=void 0,I={unversionedId:"api/beta/put-policy-schedule",id:"api/beta/put-policy-schedule",title:"put-policy-schedule",description:"Update SOD Policy schedule",source:"@site/docs/api/beta/put-policy-schedule.api.mdx",sourceDirName:"api/beta",slug:"/api/beta/put-policy-schedule",permalink:"/docs/api/beta/put-policy-schedule",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'Update SOD Policy schedule' (put-policy-schedule)",tags:[],version:"current",frontMatter:{id:"put-policy-schedule",sidebar_label:"Update SOD Policy schedule",hide_title:!0,hide_table_of_contents:!0,api:"eJztXOtz2ziS/1e6cB/yOFHWyy99uVJsZ0Z7jp215UrN2K41RLYkTCiAA4C2NS7/71sNkBQpybEzyd5lZzmVGtsk2Gj049cPAnxgKkHNrVByGLE+S1L7UcUiXJyHM4zSGFmDWT41rH/Jzk8Pwd0UaNh1g0WYaAy5xYj1rU6xwQyGqRZ2wfqXD+zCoD5Q0uK9HaR2RhREJPtGRUHipujfaWGRXT86WibUIiE+WJ+NZsJAmkTcogGTcQITpYGDSTAUE4ERED+eUvNKnuHvqdBoQKsYQU3g9OynfwwOPwxPmqzBEq75HC1q41gTNEnC7Yw1mORzZH0mItZgNNWcs/4Ds4uErhqrhZyyxwbTnn6x1FWGEYaHNK2dYYkxsCpbBwi7XAqxhPd8nsQ0CU66e5P9Xre3i/u97Z3OeHs83ut1enx7p7u/G+0xEhDNj8a+U9GC+FtlJyRBS0u3eJLEInQq3frNEHsP6wtT498wtCQZTQZgSaX9h0wYq8tfXW1hCIulctyT5VWdH/wctLf3et12p7PXbbW3SYqhRm8v61NMlJ5zy/qMpBVY4citS5luwN0MJVgykpKoC1aEgWyeqpw7rU4raLWDVnvUavXdv2bL/fcr8TZXkbOrfzlz+URfxV1lsj+joPKIip7K7pVxe7/4g+bMn91kN+uLXy5RenEJJZtrFubpPKw8fyTTOWjCE4PSCjl1fhSmWqO08QJMmiRKW4yWsxAh07ySV3IQRYLo8BhueZyigTlfwBiBRxFGIKQjNkltqhHuhJ2p1IJUVoTYvCJhrAoTZTonuDocDI9/YQ326ejof90vH05PRj+73w4Gx0cnh4Mz1mCDk5OLwfHxLwSJS7EWz1hhK3Ie0WTO3KSdOZHwOD6dOFz6snN+s+gwxtAqXRLd8fB8BIF74q2X3VvgWvMFEKBwIQ0oiaA0zJVGiISxQoY2k7MjcTY4+enoGRr2TmWP9N04Y7m2wGUEKKMcNTWXU2yAkGGcGnGL/1rd0spZgznuq5rL7hR6y6SW682zsa4H5wJuLEZL+Sw5cCJhDSYszs3GEFOwcEmG5uzukF0/NpiQFvUtjx1Cp3HMxzTqqThUMJE/5jzbqyk3gSprNHCKuoxzQtpup4wT3cdKELz0zxbiuF4XGHtsbJKRt3sKjHiPYWrRWwRyHc6a4CK/kvECXBhDNzD3eeM0DNwZMJnNTe57N349BbeFdDNl5kq7ZF3WYDuswfZZg7U7TrxVkT7SpYgvatesXfM/zDXJ6p9wTFL4cAI3RPqGkpgbH+BuGm5UZgB3Io7JAm4+nJ7cNOBmdHFEPz4dHbq/fr6gH+/PhvTjfDC6aThDuzm/OLnZMEMWbW/IxpeevnFCDjKdj1GT1UUqHccIv6fKomlALD4j3Fyx9hWjaa9Yu+V+I6JXrLN3xW6aAKeJN+V4UaJPA46v2A2EXNIsqcGI5KNxgpp+oZExN5Ykl/uKw7cXw9HSmhrs/dnwKTyaqVTXgFQD0n8YIDmzL5hsbnQpr5WyT7nQvkfTLIXRfXR+hPeJ8N2OJ5SSVxfLgUAlXxOOqRdhIVHGiPH6AAKsV51Wd49KuPb+qNXtt3v91u5/UwH3aoNtrepmY4VZrg7be0FrJ+hsjzqtfqfT7+w1263eryXjO+QWR/TcI12b469K4jDavM6QSyVFyGMY/QoiIjCYCMK0sgwcuOpUkue8xvsmDOaoRci3TvDuH78o/flNE2A4Aalc4fsHeb8wywaNR1Klp68MRDjhaWwrAwlOmxtEseaGhRRyBg5mIuRTxZ6wM4+W1+u1V9DxrZxQJAKlLbvWUy73RMFbKu0Lck8Xu89X66u04HB06rC3WcKh4eHRyWg4Wqk0i6vk/Ru7F89P98pkVmAXMDxcaUyEu+29Fu/tTDiPEHut9s5k3MNWey/stHZ6TqQv7xttmDkSJon5wrWQqlN/EOGMYwzZT+MUXihVRWc5FXcD51zER/PELs7QpHFFvWOlYuRyjaWhjKhXhgbEBJCeBe0fBok+2o8RHGWMyrxNeGww72gpPXyB4H1H5lXWnVIahoeV1bYm7fakw3vBbrjfC3rjSTfgnXEU7PY623utCXbHEZYaVV83Z/7Qn5u0KvaVDvHjo/dDkyhpvOF3Wq114Cmpf5ybWd23rPuWdd+y7lvWtUhdi/zYtUjdt6xds3bNH9I1675l3besAakGpB8GkOq+Zd23rPuWdd+y7lv++H3L3qZW5UHsjPlIa6UhgDO0qZYUbrIw7jdjwlhFC0IEIW95LKLv2NCM0HIRH6joBeb5XkgMppoL4hAdy6GKEBKtbkVE2ZJPbBzJPBNx46pW22u1mm14xyM4y9Z3kC2GxKh5+FnI6UuUdyHF7ylC/giIyIXnJ6bFXeTjndZ+pzfZ6XHe2eu1d7fH+xPe7bb2t/f3nemgMXyKm4CvOvVPKAlqIVYhj8UfGIFGbpR0DLjJv4SVVR04Gi+QPwUmP7ZYZsYv0ObnBnB4d/ARersQczlN3XU+XRGCDC7O12LKYyNj4lSLqdjYQC16fkfvBxfHLt07+vvFEaV3RGtta/WAwqLDDqXJFmbqzpcDfgF3vJS3wNuM6luYI6ccdzlQ+L/Mwlic52GyCW+z2Tc8USYNE63mFVcK/U5xeC2a2GzAmK7NuQ1nMOZUviifBb8dhCEmNjjOJPkWZsgj1G+a8C1pdEUXS1GuRfgMS47LSiHnwHv7vJ0MQpvy2NlExQsLa8lYzPSDUSa5KnejktCcSBfS8tBSUhRTOaI1hhbGqXU7zjM4cvkNzrnMxxWIVYZIB3cfPDOH1qcpIU/NC/zuY8yFDNzSihu3mDmfK849Gjlt5GrKECkrSN3D2ahCXbnjw0RgHNW+W/tu7bsv9N3Vm2fZC9rsrkt92uupz4XkqZ0p7YLnWuqjnfVIBfkgX0p6RbrmVJYi/e3TCKz6jJLGu6ITv2d+5EP5GvODQh/++jjvFeWhf6kLYtDJ0a9g4jLlvuN7ybETlBdVd32290qPRRSh3JAipgY1LFQKXCMVo5I44aYBkUIjX1mY8VsEHoZojEdAmlXS2SjhS7I6k6wzyToa1dHorxGN6kyy9t3ad/89ffeLmWTBlfOWLE8y6XzO9cJbWnafVsuh1+pCvlUQCpdzqlrNVogYFDkWq2YObNxpj9uT3RB7Ee9FO939SSfc6fDt3fZue9zr7LJyrL9c+nHhZFWfKunb6zF7z6RvUUMqI9TGKhVV23+ppXeqBGsEPUXeDMI22eN1kTt29je8zVAKPnC5yDMkU8kh5VJGhGlKwZzG6nyskMBhKm5RQoJaKP+CkXbxBaDptU4s5sI5L63iDK1eBIOJRZ05Sm5kxSzujWSExiFBrChrVnDHhYUxTijns3rhMtgpF/I7ZqeZir4pk4czWvExrRiO7kNEcvQic9/e1N8d0gs2wohzr+AnGr2+2uESUon3icesIu+s8/M6P69jfB3j/xoxvs7Pa9+tffff03e/Ij/PsqGn8/PtVuvF+fk2HfWAIpd6T8b1f56mO1fJOPB7dVTodgZGyxzc5RV2prIvXLkPQtEXqdhW8TUqgWbrQUSPW8XhEfqcFSWHnq9Ux6zPZtYmpr+19WBRcmkfmzwRzXwHilR3zVDNt8Zo+Qb4oX0C3tVoAAw+DrPyoukErAXZsAc8R9yL2y2JrJWL2LWGv0iZtqKQHhcq1eDJNGg7TmZP7nKo5gmXtLfCb1wh8aytjyfiQseP374WT+iJtWwS3xdn44mAVMcrS6QlXC+/PkYbPOZ+9rVvkC2jCVVrnbXJTmlYB94h126rLL3AeP23T6M3MKV80/l7aijVRUEFAnD4iNo4PBvkzXx6yIUYrdLpzDE+qLwuIf+BSazumnAlzxHhcpjvYjrPFgEHsUojODs6HznxEgF0wEAUrl/nmorwFmOKh82lVMkIIxWaLZ6ILV55cOuNi36uTCifd7qSARwKAiVBUZzGZAt2VR9cJvkqeWmVf56N/8rpBZ5e4OiZNyt8eFFfhn47TqjRiYnHxknvG6b3FIMSRaqrpA2I7ioXJI2Mk+prrzDX4zdwUqEYEMUqJ1fy00yEM6g+Bx7PwMxUGkcwhHCmlMH/ASBzIou7nKYiwm9g7I6mDZyfBJ1WianATxqIIDX4xu+xRq6ltyo+pojtEhYFEyEj76k3TsEXOr7xe+cry3aXL7PASgx9A9s0ZUBTBh4cTLYEH7nMG78rmNbhEMIbwsHSDhxGZLyWENET24j3jv6We8Z9Q1AlHnxM0vd/9JfQl+8ndTdodDGGxzTd8oUgj2PIaFH8qsgr7xasCnGd31hNhVwRnee36FZRKP3R1ksrHiybKqcyXnxv/H4CU35URP5/Q8Iaf/66+JPlxtSyPFt+X/RoeVYh+zjq+pn40pH4L54ALx9Pf2bgyp7rJ453bzzdXRxaXh5O/opzlPmhya8561QcbPrK0xzVoxxfPh6xPAqxfoCgehpgeayq2FTv99Q/vwm++ADu+p71641b090G8sr+8Zftxa7u/37xpnGCRCfnrMB9CpbfZXXIeovaODwySHddpHH64KH1p3LJ5Z8imsTcEiK7+BTOBLpGV4LcUn3TIExUcxdTEq0okOVHfafOOTSYkMd8LGJhF+5VTM4Fd2DviyeCI/rbpK7aprnCGZ0Ta8InBJShSjX1HWgzkVXwm8pw6pyL+CPhERzmGAUHaj5PJS1gonQ6B27hWSATJkx9CA6VlJjLRbnypngqj0CEpbSEpqvA9dycTugdigixBFbPzLVllcleoPDQlnBmuZAzjJ2P0LhqafocbZ6IYIZxQsYTixClKSPZh+FojaJKUBqV6hCbSk+3sofMFo2lw3CojTelbrPdbAWuJH5ssEQZO+eyRPzCf+l5w1csVq3yYfn26Pt/7DqDAip6txLq1hK3qS/Cfd/jkpX7HqzB+sXnrx231wRwxtLAhwfq7FEv4JEu/54itY0ur5dlvoOfSBj6PSrw4cnlvs6Yj97An/hq9sa15f1quVi2qhhrsM+48F/29mdRXQvScetvZO+8glHplB+RWX2ZR+0R/4Rva35x7HWp1fTxgoxtnH2ye+6bZprfsYb7f59dsSviUyXe1Om73nT9geUtaNZnnmxeAmzKgLNf+pfU7fonodot8g==",sidebar_class_name:"put api-method",info_path:"docs/api/beta/identity-security-cloud-beta-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'Update SOD Policy schedule' (put-policy-schedule)"},sidebar:"openApiSidebar",previous:{title:"Get SOD policy schedule",permalink:"/docs/api/beta/get-sod-policy-schedule"},next:{title:"Delete SOD policy schedule",permalink:"/docs/api/beta/delete-sod-policy-schedule"}},E={},q=[{value:"Request",id:"request",level:2}],L={toc:q},A="wrapper";function Z(e){var a=e,{components:t}=a,l=v(a,["components"]);return(0,s.kt)(A,x(b(b({},L),l),{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{className:"openapi__heading"},"Update SOD Policy schedule"),(0,s.kt)(n(),{method:"put",path:"/sod-policies/{id}/schedule",mdxType:"MethodEndpoint"}),(0,s.kt)("admonition",b({},{title:"deprecated",type:"caution"}),(0,s.kt)("p",{parentName:"admonition"},"This endpoint has been deprecated and may be replaced or removed in future versions of the API.")),(0,s.kt)("p",null,"This updates schedule for a specified SOD policy.\nRequires role of ORG_ADMIN."),(0,s.kt)("h2",b({},{id:"request"}),"Request"),(0,s.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(r.Z,{className:"paramsItem",param:{in:"path",name:"id",schema:{type:"string"},required:!0,description:"The ID of the SOD policy to update its schedule.",example:"ef38f94347e94562b5bb8424a56397d8"},mdxType:"ParamsItem"})))),(0,s.kt)(m.Z,{className:"openapi-tabs__mime",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-mime"},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-body"},"Body"),(0,s.kt)("strong",{className:"openapi-schema__required"},"required")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD Policy schedule name",example:"SCH-1584312283015"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"created",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"The time when this SOD policy schedule is created.",example:"2020-01-01T00:00:00.000000Z"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"modified",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"The time when this SOD policy schedule is modified.",example:"2020-01-01T00:00:00.000000Z"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD Policy schedule description",example:"Schedule for policy xyz"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"schedule"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The schedule information.")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"ScheduleType",qualifierMessage:"**Possible values:** [`DAILY`, `WEEKLY`, `MONTHLY`, `CALENDAR`, `ANNUALLY`]",schema:{description:"Enum representing the currently supported schedule types.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["DAILY","WEEKLY","MONTHLY","CALENDAR","ANNUALLY"],example:"WEEKLY",title:"ScheduleType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"months"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The months to execute the search. This only applies to schedules with a type of ",(0,s.kt)("inlineCode",{parentName:"p"},"ANNUALLY"),".")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"SelectorType",qualifierMessage:"**Possible values:** [`LIST`, `RANGE`]",schema:{description:"Enum representing the currently supported selector types.\n\nLIST - the *values* array contains one or more distinct values.\n\nRANGE - the *values* array contains two values: the start and end of the range, inclusive.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["LIST","RANGE"],example:"LIST",title:"SelectorType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"values",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{description:"The selected values.\n",type:"array",example:["MON","WED"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"interval",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{nullable:!0,description:"The selected interval for RANGE selectors.\n",type:"integer",format:"int32",example:3},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"days"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The days to execute the search."),(0,s.kt)("p",null,"If ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," is ",(0,s.kt)("inlineCode",{parentName:"p"},"WEEKLY"),", the values will be ",(0,s.kt)("inlineCode",{parentName:"p"},"MON"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"TUE"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"WED"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"THU"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"FRI"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"SAT"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"SUN"),"."),(0,s.kt)("p",null,"If ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," is ",(0,s.kt)("inlineCode",{parentName:"p"},"MONTHLY")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"ANNUALLY"),", the values will be a number in double quotes, like ",(0,s.kt)("inlineCode",{parentName:"p"},'"1"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"10"'),", or ",(0,s.kt)("inlineCode",{parentName:"p"},'"28"'),".  Optionally, the value ",(0,s.kt)("inlineCode",{parentName:"p"},'"L"')," can be used to refer to the last day of the month.")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"SelectorType",qualifierMessage:"**Possible values:** [`LIST`, `RANGE`]",schema:{description:"Enum representing the currently supported selector types.\n\nLIST - the *values* array contains one or more distinct values.\n\nRANGE - the *values* array contains two values: the start and end of the range, inclusive.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["LIST","RANGE"],example:"LIST",title:"SelectorType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"values",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{description:"The selected values.\n",type:"array",example:["MON","WED"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"interval",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{nullable:!0,description:"The selected interval for RANGE selectors.\n",type:"integer",format:"int32",example:3},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"hours"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The hours selected.")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"SelectorType",qualifierMessage:"**Possible values:** [`LIST`, `RANGE`]",schema:{description:"Enum representing the currently supported selector types.\n\nLIST - the *values* array contains one or more distinct values.\n\nRANGE - the *values* array contains two values: the start and end of the range, inclusive.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["LIST","RANGE"],example:"LIST",title:"SelectorType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"values",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{description:"The selected values.\n",type:"array",example:["MON","WED"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"interval",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{nullable:!0,description:"The selected interval for RANGE selectors.\n",type:"integer",format:"int32",example:3},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!1,name:"expiration",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"The schedule expiration date. Latest possible expiration date is '2038-01-19T03:14:07+0000'",type:"string",nullable:!0,format:"date-time",example:"2018-06-25T20:22:28.104Z",title:"DateTime"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"timeZoneId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The canonical TZ identifier the schedule will run in (ex. America/New_York).  If no timezone is specified, the org's default timezone is used.",nullable:!0,type:"string",example:"America/Chicago"},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"recipients"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`IDENTITY`]",schema:{type:"string",description:"SOD policy recipient DTO type.",enum:["IDENTITY"],example:"IDENTITY"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD policy recipient's identity ID.",example:"2c7180a46faadee4016fb4e018c20642"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD policy recipient's display name.",example:"Michael Michaels"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(c.Z,{collapsible:!1,name:"emailEmptyResults",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Indicates if empty results need to be emailed",example:!1},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"creatorId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Policy's creator ID",example:"0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"modifierId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Policy's modifier ID",example:"0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"},mdxType:"SchemaItem"}))))),(0,s.kt)("div",null,(0,s.kt)("div",null,(0,s.kt)(i.Z,{mdxType:"ApiTabs"},(0,s.kt)(d.default,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"SOD policy by ID.")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(d.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD Policy schedule name",example:"SCH-1584312283015"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"created",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"The time when this SOD policy schedule is created.",example:"2020-01-01T00:00:00.000000Z"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"modified",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"The time when this SOD policy schedule is modified.",example:"2020-01-01T00:00:00.000000Z"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD Policy schedule description",example:"Schedule for policy xyz"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"schedule"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The schedule information.")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"ScheduleType",qualifierMessage:"**Possible values:** [`DAILY`, `WEEKLY`, `MONTHLY`, `CALENDAR`, `ANNUALLY`]",schema:{description:"Enum representing the currently supported schedule types.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["DAILY","WEEKLY","MONTHLY","CALENDAR","ANNUALLY"],example:"WEEKLY",title:"ScheduleType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"months"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The months to execute the search. This only applies to schedules with a type of ",(0,s.kt)("inlineCode",{parentName:"p"},"ANNUALLY"),".")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"SelectorType",qualifierMessage:"**Possible values:** [`LIST`, `RANGE`]",schema:{description:"Enum representing the currently supported selector types.\n\nLIST - the *values* array contains one or more distinct values.\n\nRANGE - the *values* array contains two values: the start and end of the range, inclusive.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["LIST","RANGE"],example:"LIST",title:"SelectorType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"values",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{description:"The selected values.\n",type:"array",example:["MON","WED"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"interval",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{nullable:!0,description:"The selected interval for RANGE selectors.\n",type:"integer",format:"int32",example:3},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"days"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The days to execute the search."),(0,s.kt)("p",null,"If ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," is ",(0,s.kt)("inlineCode",{parentName:"p"},"WEEKLY"),", the values will be ",(0,s.kt)("inlineCode",{parentName:"p"},"MON"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"TUE"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"WED"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"THU"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"FRI"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"SAT"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"SUN"),"."),(0,s.kt)("p",null,"If ",(0,s.kt)("inlineCode",{parentName:"p"},"type")," is ",(0,s.kt)("inlineCode",{parentName:"p"},"MONTHLY")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"ANNUALLY"),", the values will be a number in double quotes, like ",(0,s.kt)("inlineCode",{parentName:"p"},'"1"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"10"'),", or ",(0,s.kt)("inlineCode",{parentName:"p"},'"28"'),".  Optionally, the value ",(0,s.kt)("inlineCode",{parentName:"p"},'"L"')," can be used to refer to the last day of the month.")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"SelectorType",qualifierMessage:"**Possible values:** [`LIST`, `RANGE`]",schema:{description:"Enum representing the currently supported selector types.\n\nLIST - the *values* array contains one or more distinct values.\n\nRANGE - the *values* array contains two values: the start and end of the range, inclusive.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["LIST","RANGE"],example:"LIST",title:"SelectorType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"values",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{description:"The selected values.\n",type:"array",example:["MON","WED"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"interval",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{nullable:!0,description:"The selected interval for RANGE selectors.\n",type:"integer",format:"int32",example:3},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"hours"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"The hours selected.")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!0,schemaName:"SelectorType",qualifierMessage:"**Possible values:** [`LIST`, `RANGE`]",schema:{description:"Enum representing the currently supported selector types.\n\nLIST - the *values* array contains one or more distinct values.\n\nRANGE - the *values* array contains two values: the start and end of the range, inclusive.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["LIST","RANGE"],example:"LIST",title:"SelectorType"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"values",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{description:"The selected values.\n",type:"array",example:["MON","WED"],items:{type:"string"}},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"interval",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{nullable:!0,description:"The selected interval for RANGE selectors.\n",type:"integer",format:"int32",example:3},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!1,name:"expiration",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"The schedule expiration date. Latest possible expiration date is '2038-01-19T03:14:07+0000'",type:"string",nullable:!0,format:"date-time",example:"2018-06-25T20:22:28.104Z",title:"DateTime"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"timeZoneId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The canonical TZ identifier the schedule will run in (ex. America/New_York).  If no timezone is specified, the org's default timezone is used.",nullable:!0,type:"string",example:"America/Chicago"},mdxType:"SchemaItem"})))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"recipients"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`IDENTITY`]",schema:{type:"string",description:"SOD policy recipient DTO type.",enum:["IDENTITY"],example:"IDENTITY"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD policy recipient's identity ID.",example:"2c7180a46faadee4016fb4e018c20642"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"SOD policy recipient's display name.",example:"Michael Michaels"},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(c.Z,{collapsible:!1,name:"emailEmptyResults",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"Indicates if empty results need to be emailed",example:!1},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"creatorId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Policy's creator ID",example:"0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"modifierId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Policy's modifier ID",example:"0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"},mdxType:"SchemaItem"})))),(0,s.kt)(d.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "name": "SCH-1584312283015",\n  "created": "2020-01-01T00:00:00.000000Z",\n  "modified": "2020-01-01T00:00:00.000000Z",\n  "description": "Schedule for policy xyz",\n  "schedule": {\n    "type": "WEEKLY",\n    "months": {\n      "type": "LIST",\n      "values": [\n        "3",\n        "6",\n        "9",\n        "12"\n      ]\n    },\n    "days": {\n      "type": "LIST",\n      "values": [\n        "MON",\n        "WED",\n        "FRI"\n      ]\n    },\n    "hours": {\n      "type": "RANGE",\n      "values": [\n        "9",\n        "18"\n      ],\n      "interval": 3\n    },\n    "expiration": "2018-06-25T20:22:28.104Z",\n    "timeZoneId": "America/Chicago"\n  },\n  "recipients": [\n    {\n      "type": "IDENTITY",\n      "id": "2c7180a46faadee4016fb4e018c20642",\n      "name": "Michael Michaels"\n    }\n  ],\n  "emailEmptyResults": false,\n  "creatorId": "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde",\n  "modifierId": "0f11f2a4-7c94-4bf3-a2bd-742580fe3bde"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(d.default,{label:"400",value:"400",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Client Error - Returned if the request body is invalid.")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(d.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"detailCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"trackingId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"messages"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Generic localized reason for error")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"locale",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"localeOrigin",required:!1,schemaName:"LocaleOrigin",qualifierMessage:"**Possible values:** [`DEFAULT`, `REQUEST`, `null`]",schema:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"text",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"causes"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"locale",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"localeOrigin",required:!1,schemaName:"LocaleOrigin",qualifierMessage:"**Possible values:** [`DEFAULT`, `REQUEST`, `null`]",schema:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"text",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(d.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "detailCode": "400.1 Bad Request Content",\n  "trackingId": "e7eab60924f64aa284175b9fa3309599",\n  "messages": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The request was syntactically correct but its content is semantically invalid."\n    }\n  ],\n  "causes": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The request was syntactically correct but its content is semantically invalid."\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(d.default,{label:"401",value:"401",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(d.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"error",required:!1,schemaName:"",qualifierMessage:void 0,schema:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"},mdxType:"SchemaItem"})))),(0,s.kt)(d.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "error": "JWT validation failed: JWT is expired"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(d.default,{label:"403",value:"403",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(d.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"detailCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"trackingId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"messages"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Generic localized reason for error")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"locale",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"localeOrigin",required:!1,schemaName:"LocaleOrigin",qualifierMessage:"**Possible values:** [`DEFAULT`, `REQUEST`, `null`]",schema:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"text",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"causes"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"locale",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"localeOrigin",required:!1,schemaName:"LocaleOrigin",qualifierMessage:"**Possible values:** [`DEFAULT`, `REQUEST`, `null`]",schema:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"text",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(d.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "detailCode": "400.1 Bad Request Content",\n  "trackingId": "e7eab60924f64aa284175b9fa3309599",\n  "messages": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The request was syntactically correct but its content is semantically invalid."\n    }\n  ],\n  "causes": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The request was syntactically correct but its content is semantically invalid."\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"})),(0,s.kt)(d.default,{label:"403",value:"403",mdxType:"TabItem"},(0,s.kt)("p",null," An example of a 403 response object"),(0,s.kt)(o.Z,{responseExample:'{\n  "detailCode": "403 Forbidden",\n  "trackingId": "b21b1f7ce4da4d639f2c62a57171b427",\n  "messages": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The server understood the request but refuses to authorize it."\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(d.default,{label:"429",value:"429",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(d.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"message",required:!1,schemaName:"",qualifierMessage:void 0,schema:{description:"A message describing the error",example:" Rate Limit Exceeded "},mdxType:"SchemaItem"})))),(0,s.kt)(d.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "message": " Rate Limit Exceeded "\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(d.default,{label:"500",value:"500",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Internal Server Error - Returned if there is an unexpected error.")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(d.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(d.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(c.Z,{collapsible:!1,name:"detailCode",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"trackingId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"messages"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Generic localized reason for error")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"locale",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"localeOrigin",required:!1,schemaName:"LocaleOrigin",qualifierMessage:"**Possible values:** [`DEFAULT`, `REQUEST`, `null`]",schema:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"text",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,s.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"causes"),(0,s.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field")),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,s.kt)(c.Z,{collapsible:!1,name:"locale",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"localeOrigin",required:!1,schemaName:"LocaleOrigin",qualifierMessage:"**Possible values:** [`DEFAULT`, `REQUEST`, `null`]",schema:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},mdxType:"SchemaItem"}),(0,s.kt)(c.Z,{collapsible:!1,name:"text",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."},mdxType:"SchemaItem"}),(0,s.kt)("li",null,(0,s.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,s.kt)(d.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "detailCode": "400.1 Bad Request Content",\n  "trackingId": "e7eab60924f64aa284175b9fa3309599",\n  "messages": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The request was syntactically correct but its content is semantically invalid."\n    }\n  ],\n  "causes": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "The request was syntactically correct but its content is semantically invalid."\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"})),(0,s.kt)(d.default,{label:"500",value:"500",mdxType:"TabItem"},(0,s.kt)("p",null," An example of a 500 response object"),(0,s.kt)(o.Z,{responseExample:'{\n  "detailCode": "500.0 Internal Fault",\n  "trackingId": "b21b1f7ce4da4d639f2c62a57171b427",\n  "messages": [\n    {\n      "locale": "en-US",\n      "localeOrigin": "DEFAULT",\n      "text": "An internal fault occurred."\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"})))))))))))}Z.isMDXComponent=!0}}]);