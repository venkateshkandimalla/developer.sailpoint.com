"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[16601],{17377:(e,t,i)=>{i.d(t,{Z:()=>I});var a=i(67294),n=i(86010),c=i(76828),s=i(39130),l=i(35096),o=i(33084);const r={cardContainer:"cardContainer_S8oU",cardTitle:"cardTitle_HoSo",cardDescription:"cardDescription_c27F",docCardIcon:"docCardIcon_elTJ"};var f=i(99603),d=i(21702);function p({href:e,children:t}){return a.createElement(s.default,{href:e,className:(0,n.default)("card padding--lg",r.cardContainer)},t)}function u({href:e,icon:t,title:i,description:c}){return a.createElement(p,{href:e},a.createElement("h2",{className:(0,n.default)("text--truncate",r.cardTitle),title:i},t,i),c&&a.createElement("p",{className:r.cardDescription,title:c},c))}function m({item:e}){var t,i;const n=(0,c.Wl)(e);return n?a.createElement(u,{href:n,icon:a.createElement(f.G,{icon:d.cC_,className:r.docCardIcon}),title:e.label,description:null!=(i=null==(t=e.customProps)?void 0:t.description)?i:(0,o.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e.items.length})}):null}function y({item:e}){var t,i;const n=(0,l.Z)(e.href)?a.createElement(f.G,{icon:d.FL8,className:r.docCardIcon}):a.createElement(f.G,{icon:d.wlW,className:r.docCardIcon}),s=(0,c.xz)(null!=(t=e.docId)?t:void 0);return a.createElement(u,{href:e.href,icon:n,title:e.label,description:null!=(i=e.description)?i:null==s?void 0:s.description})}function h({item:e}){switch(e.type){case"link":return a.createElement(y,{item:e});case"category":return a.createElement(m,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}var v=Object.defineProperty,g=Object.getOwnPropertySymbols,b=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable,k=(e,t,i)=>t in e?v(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,N=(e,t)=>{for(var i in t||(t={}))b.call(t,i)&&k(e,i,t[i]);if(g)for(var i of g(t))w.call(t,i)&&k(e,i,t[i]);return e};function S({className:e}){const t=(0,c.jA)();return a.createElement(I,{items:t.items,className:e})}function I(e){const{items:t,className:i}=e;if(!t)return a.createElement(S,N({},e));const s=(0,c.MN)(t);return a.createElement("section",{className:(0,n.default)("row",i)},s.map(((e,t)=>a.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},a.createElement(h,{item:e})))))}},55354:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>v,default:()=>S,frontMatter:()=>h,metadata:()=>g,toc:()=>w});var a=i(3905),n=i(17377),c=i(76828),s=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,f=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,p=(e,t,i)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,u=(e,t)=>{for(var i in t||(t={}))f.call(t,i)&&p(e,i,t[i]);if(r)for(var i of r(t))d.call(t,i)&&p(e,i,t[i]);return e},m=(e,t)=>l(e,o(t)),y=(e,t)=>{var i={};for(var a in e)f.call(e,a)&&t.indexOf(a)<0&&(i[a]=e[a]);if(null!=e&&r)for(var a of r(e))t.indexOf(a)<0&&d.call(e,a)&&(i[a]=e[a]);return i};const h={id:"lifecycle-states",title:"Lifecycle States",description:"Lifecycle States",custom_edit_url:null},v=void 0,g={unversionedId:"api/v3/lifecycle-states",id:"api/v3/lifecycle-states",title:"Lifecycle States",description:"Lifecycle States",source:"@site/docs/api/v3/lifecycle-states.tag.mdx",sourceDirName:"api/v3",slug:"/api/v3/lifecycle-states",permalink:"/docs/api/v3/lifecycle-states",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"lifecycle-states",title:"Lifecycle States",description:"Lifecycle States",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Process identities under profile",permalink:"/docs/api/v3/sync-identity-profile"},next:{title:"Set Lifecycle State",permalink:"/docs/api/v3/set-lifecycle-state"}},b={},w=[],k={toc:w},N="wrapper";function S(e){var t=e,{components:i}=t,s=y(t,["components"]);return(0,a.kt)(N,m(u(u({},k),s),{components:i,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use this API to implement and customize lifecycle state functionality.\nWith this functionality in place, administrators can create and configure custom lifecycle states for use across their organizations, which is key to controlling which users have access, when they have access, and the access they have."),(0,a.kt)("p",null,"A lifecycle state describes a user's status in a company. For example, two lifecycle states come by default with Identity Security Cloud: 'Active' and 'Inactive.'\nWhen an active employee takes an extended leave of absence from a company, his or her lifecycle state may change to 'Inactive,' for security purposes.\nThe inactive employee would lose access to all the applications, sources, and sensitive data during the leave of absence, but when the employee returns and becomes active again, all that access would be restored.\nThis saves administrators the time that would otherwise be spent provisioning the employee's access to each individual tool, reviewing the employee's certification history, etc. "),(0,a.kt)("p",null,"Administrators can create a variety of custom lifecycle states. Refer to ",(0,a.kt)("a",u({parentName:"p"},{href:"https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#planning-new-lifecycle-states"}),"Planning New Lifecycle States")," for some custom lifecycle state ideas."),(0,a.kt)("p",null,"Administrators must define the criteria for being in each lifecycle state, and they must define how Identity Security Cloud manages users' access to apps and sources for each lifecycle state."),(0,a.kt)("p",null,"In Identity Security Cloud, administrators can manage lifecycle states by going to Admin > Identities > Identity Profile, selecting the identity profile whose lifecycle states they want to manage, selecting the 'Provisioning' tab, and using the left panel to either select the lifecycle state they want to modify or create a new lifecycle state. "),(0,a.kt)("p",null,"In the 'Provisioning' tab, administrators can make the following access changes to an identity profile's lifecycle state: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Enable/disable the lifecycle state for the identity profile.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Enable/disable source accounts for the identity profile's lifecycle state.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add existing access profiles to grant to the identity profiles in that lifecycle state.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Create a new access profile to grant to the identity profile in that lifecycle state."))),(0,a.kt)("p",null,"Access profiles granted in a previous lifecycle state are automatically revoked when the identity moves to a new lifecycle state.\nTo maintain access across multiple lifecycle states, administrators must grant the access profiles in each lifecycle state.\nFor example, if an administrator wants users with the 'HR Employee' identity profile to maintain their building access in both the 'Active' and 'Leave of Absence' lifecycle states, the administrator must grant the access profile for that building access to both lifecycle states."),(0,a.kt)("p",null,"During scheduled refreshes, Identity Security Cloud evaluates lifecycle states to determine whether their assigned identities have the access defined in the lifecycle states' access profiles.\nIf the identities are missing access, Identity Security Cloud provisions that access. "),(0,a.kt)("p",null,"Administrators can also use the 'Provisioning' tab to configure email notifications for Identity Security Cloud to send whenever an identity with that identity profile has a lifecycle state change.\nRefer to ",(0,a.kt)("a",u({parentName:"p"},{href:"https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications"}),"Configuring Lifecycle State Notifications")," for more information on how to do so."),(0,a.kt)("p",null,"An identity's lifecycle state can have four different statuses: the lifecycle state's status can be 'Active,' it can be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.'\nRefer to ",(0,a.kt)("a",u({parentName:"p"},{href:"https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states"}),"Moving Identities into Lifecycle States")," for more information about these different lifecycle state statuses. "),(0,a.kt)("p",null,"Refer to ",(0,a.kt)("a",u({parentName:"p"},{href:"https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html"}),"Setting Up Lifecycle States")," for more information about lifecycle states."),(0,a.kt)(n.Z,{items:(0,c.jA)().items,mdxType:"DocCardList"}))}S.isMDXComponent=!0}}]);