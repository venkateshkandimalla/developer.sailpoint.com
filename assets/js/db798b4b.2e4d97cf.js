"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[18171],{77025:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>k,default:()=>C,frontMatter:()=>h,metadata:()=>N,toc:()=>g});var a=n(3905),i=Object.defineProperty,r=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&p(e,n,t[n]);return e},m=(e,t)=>r(e,o(t)),d=(e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&c.call(e,a)&&(n[a]=e[a]);return n};const h={id:"connector-spec",title:"Connector Specification File",pagination_label:"Connector Spec File",sidebar_label:"Connector Spec File",sidebar_position:4,sidebar_class_name:"connectorSpecFile",keywords:["connectivity","connectors","spec","specification"],description:"The connector spec file tells ISC how the connector should interact between ISC and the custom connector. It is the glue between ISC and the connector, so understanding the different sections are key to understanding how to build a custom connectors.",slug:"/connectivity/saas-connectivity/connector-spec",tags:["Connectivity"]},k=void 0,N={unversionedId:"connectivity/saas-connectivity/connector-spec/connector-spec",id:"connectivity/saas-connectivity/connector-spec/connector-spec",title:"Connector Specification File",description:"The connector spec file tells ISC how the connector should interact between ISC and the custom connector. It is the glue between ISC and the connector, so understanding the different sections are key to understanding how to build a custom connectors.",source:"@site/docs/connectivity/saas-connectivity/connector-spec/index.md",sourceDirName:"connectivity/saas-connectivity/connector-spec",slug:"/connectivity/saas-connectivity/connector-spec",permalink:"/docs/connectivity/saas-connectivity/connector-spec",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/connectivity/saas-connectivity/connector-spec/index.md",tags:[{label:"Connectivity",permalink:"/docs/tags/connectivity"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1720812556,formattedLastUpdatedAt:"Jul 12, 2024",sidebarPosition:4,frontMatter:{id:"connector-spec",title:"Connector Specification File",pagination_label:"Connector Spec File",sidebar_label:"Connector Spec File",sidebar_position:4,sidebar_class_name:"connectorSpecFile",keywords:["connectivity","connectors","spec","specification"],description:"The connector spec file tells ISC how the connector should interact between ISC and the custom connector. It is the glue between ISC and the connector, so understanding the different sections are key to understanding how to build a custom connectors.",slug:"/connectivity/saas-connectivity/connector-spec",tags:["Connectivity"]},sidebar:"openApiSidebar",previous:{title:"Common CLI Commands",permalink:"/docs/connectivity/saas-connectivity/common-cli-commands"},next:{title:"Card",permalink:"/docs/connectivity/saas-connectivity/connector-spec/card"}},f={},g=[{value:"Summary",id:"summary",level:2},{value:"Sample File",id:"sample-file",level:2},{value:"Description of Fields",id:"description-of-fields",level:2}],y={toc:g},b="wrapper";function C(e){var t=e,{components:n}=t,i=d(t,["components"]);return(0,a.kt)(b,m(u(u({},y),i),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",u({},{id:"summary"}),"Summary"),(0,a.kt)("p",null,"The connector spec file tells ISC how the connector should interact between ISC and the custom connector. It is the glue between ISC and the connector, so understanding the different sections are key to understanding how to build a custom connectors."),(0,a.kt)("h2",u({},{id:"sample-file"}),"Sample File"),(0,a.kt)("p",null,"To see a sample spec file, see this link: ",(0,a.kt)("a",u({parentName:"p"},{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/connector-spec.json"}),"connector-spec.json")),(0,a.kt)("h2",u({},{id:"description-of-fields"}),"Description of Fields"),(0,a.kt)("p",null,"The following describes in detail the different fields in the connector spec:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"name:")," The name of the connector as it appears in ISC. Tags can be appended to this name.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"keyType:")," Either \u201csimple\u201d or \u201ccompound\u201d This determines which type of key your connector expects to receive and send back for each of the commands. This must always be indicated in your connector spec - the connector returns the correct type for each command that returns a key type."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"For example, the stdAccountRead command input is the StdAccountReadInput. if you select keyType as \u201csimple,\u201d then the StdAccountReadInput.key will be the type SimpleKey."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"commands:")," The list of commands the connector supports. A full list of available commands can be found ",(0,a.kt)("a",u({parentName:"p"},{href:"/docs/connectivity/saas-connectivity/connector-commands"}),"here"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",u({parentName:"strong"},{href:"./connector-spec/initial-value"}),"sourceConfigInitialValues"),":")," Key value pair of source config item keys and the default value that should be associated with them.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"sourceConfig")," A list of configuration items you must provide when you create a source in ISC. The order of these items is preserved in the UI."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," This is always \u201cmenu\u201d - it indicates a new menu for the sidebar. You can have multiple sections defined for complex connector configurations"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"label:")," This label indicates the text that will show up on the sidebar in ISC"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"items:")," The array of items in the menu",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:"),' This is always "section" - it indicates a new section on the page'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"sectionTitle:")," The large text title that will display for the section."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"sectionHelpMessage:")," A description about the section that can help the user understand what it is used for and how to fill out the fields"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"docLinkLabel:")," An optional field that is the text that displays next to documentation help link."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"docLink:")," The optional link that the docLinkLabel will direct to if clicked.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"key:")," The name of the configuration item as it is referenced in code."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"label:")," The name of the configuration item as it appears in the UI."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"required")," (Optional): Set to 'false' by default. Valid values are 'true' or 'false.' You must populate required configuration items in the ISC source configuration wizard before continuing."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," The configuration items' types. The following types are valid:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"text"),(0,a.kt)("li",{parentName:"ul"},"number"),(0,a.kt)("li",{parentName:"ul"},"secret"),(0,a.kt)("li",{parentName:"ul"},"textarea"),(0,a.kt)("li",{parentName:"ul"},"secrettextarea"),(0,a.kt)("li",{parentName:"ul"},"checkbox"),(0,a.kt)("li",{parentName:"ul"},"url"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"./connector-spec/radio"}),"radio")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"./connector-spec/select"}),"select")),(0,a.kt)("li",{parentName:"ul"},"toggle"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"./connector-spec/list"}),"list")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"./connector-spec/key-value"}),"keyValue")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"./connector-spec/card"}),"cardList")))))))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"accountSchema:")," The schema for an account in ISC populated by data from the source."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"displayAttribute:")," Identifies the attribute (defined below) used to map to ",(0,a.kt)("inlineCode",{parentName:"li"},"Account Name")," in the Identity Security Cloud account schema. This should be a unique value even though it is not required because the connector will use this value to correlate accounts in ISC to accounts in the source system."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"identityAttribute:")," Identifies the attribute (defined below) used to map to ",(0,a.kt)("inlineCode",{parentName:"li"},"Account ID")," in the Identity Security Cloud account schema. This must be a globally unique identifier, such as email address, employee ID, etc."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"groupAttribute:")," Identifies the attribute used to map accounts to entitlements. For example, a web service can define ",(0,a.kt)("inlineCode",{parentName:"li"},"groups")," that users are members of, and the ",(0,a.kt)("inlineCode",{parentName:"li"},"groups")," grant entitlements to each user. In this case, ",(0,a.kt)("strong",{parentName:"li"},"groupAttribute")," is \u201cgroups,\u201d and there is also an account attribute called \u201cgroups\u201d."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"attributes:")," One or more attributes that map to a user\u2019s attribute on the target source. Each attribute defines the following:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name:")," The attribute\u2019s name as it appears in ISC."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," The attribute\u2019s type. Possible values are ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"long"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"int"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"description:")," A helpful description of the attribute. This is useful to source owners when they are trying to understand the account schema."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"managed:")," This indicates whether the entitlements are manageable through ISC or read-only."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"entitlement:")," This boolean indicates whether the attribute is an entitlement. Entitlements give identities privileges on the source system. Use this indication to determine which fields to synchronize with accounts in ISC for tasks such as separation of duties and role assignment. The boolean indicates whether the attribute is an entitlement."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"multi:")," This indicates entitlements that are stored in an array format. This one field can store multiple entitlements for a single account."))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"entitlementSchemas:")," A list of entitlement schemas in ISC populated by data from the source."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," The entitlement\u2019s type. Currently, only ",(0,a.kt)("inlineCode",{parentName:"li"},"group")," is supported."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"displayAttribute:")," The entitlement attribute\u2019s name. This can be the ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," or another human friendly identifier for a group."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"identityAttribute:")," The entitlement attribute\u2019s unique ID. This can be the ",(0,a.kt)("inlineCode",{parentName:"li"},"id")," or another unique key for a group."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"attributes:")," The entitlement\u2019s list of attributes. This list of attributes is an example: ",(0,a.kt)("inlineCode",{parentName:"li"},"id"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"name"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"description"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name:")," The name of the attribute as it appears in ISC."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," The attribute\u2019s type. Possible values are ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"long"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"int"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"description:")," A helpful description the attribute. This is useful to source owners when they are trying to understand the account schema."))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"accountCreateTemplate:")," A map of identity attributes ISC will pass to the connector to create an account in the target source."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"key:")," The unique identifier of the attribute. This is also the name that is presented in the Create Profile screen in ISC."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"label:")," A friendly name for presentation purposes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," The attribute\u2019s type. Possible values are ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"long"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"int"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"initialValue (Optional):")," Use this to specify identitAttribute mapping, generator or default values.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"type:")," The initial value type. Possible values are ",(0,a.kt)("inlineCode",{parentName:"li"},"identityAttribute"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"generator"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"static"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"attributes:")," Attributes change depending on the type selected.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name:")," Use this to identify the mapping for identityAttribute type, or the generator to use (",(0,a.kt)("inlineCode",{parentName:"li"},"Create Password"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Create Unique Account ID"),")."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"value:")," Use this as the default value for the static type."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"maxSize:")," Use this for the Create Unique Account ID generator type. This value specifies the maximum size of the username to be generated."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"maxUniqueChecks:")," Use this for the Create Unique Account ID generator type. This value specifies the maximum retries in case a unique ID is not found with the first random generated user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"template:")," Use this for the Create Unique Account ID generator type. This value specifies the template used for generation. Example: ",(0,a.kt)("inlineCode",{parentName:"li"},'"$(firstname).$(lastname)$(uniqueCounter)"'),"."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"required (Optional):")," Determines whether the account create operation requires this attribute. It defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),". If it is ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," and Identity Security Cloud encounters an identity missing this attribute, ISC does not send the account to the connector for account creation.")))))))}C.isMDXComponent=!0}}]);