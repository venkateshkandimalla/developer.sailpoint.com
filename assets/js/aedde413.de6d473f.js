"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[58853],{83037:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>v,default:()=>A,frontMatter:()=>y,metadata:()=>b,toc:()=>k});var a=n(3905),o=Object.defineProperty,c=Object.defineProperties,i=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,d=(t,e,n)=>e in t?o(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,u=(t,e)=>{for(var n in e||(e={}))l.call(e,n)&&d(t,n,e[n]);if(r)for(var n of r(e))s.call(e,n)&&d(t,n,e[n]);return t},p=(t,e)=>c(t,i(e)),m=(t,e)=>{var n={};for(var a in t)l.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&r)for(var a of r(t))e.indexOf(a)<0&&s.call(t,a)&&(n[a]=t[a]);return n};const y={id:"account-delete",title:"Account Delete",pagination_label:"Account Delete",sidebar_label:"Account Delete",keywords:["connectivity","connectors","account delete"],description:"Remove account from a source.",slug:"/connectivity/saas-connectivity/commands/account-delete",tags:["Connectivity","Connector Command"]},v=void 0,b={unversionedId:"connectivity/saas-connectivity/connector-commands/account-delete",id:"connectivity/saas-connectivity/connector-commands/account-delete",title:"Account Delete",description:"Remove account from a source.",source:"@site/docs/connectivity/saas-connectivity/connector-commands/account-delete.md",sourceDirName:"connectivity/saas-connectivity/connector-commands",slug:"/connectivity/saas-connectivity/commands/account-delete",permalink:"/docs/connectivity/saas-connectivity/commands/account-delete",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/connectivity/saas-connectivity/connector-commands/account-delete.md",tags:[{label:"Connectivity",permalink:"/docs/tags/connectivity"},{label:"Connector Command",permalink:"/docs/tags/connector-command"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1720812556,formattedLastUpdatedAt:"Jul 12, 2024",frontMatter:{id:"account-delete",title:"Account Delete",pagination_label:"Account Delete",sidebar_label:"Account Delete",keywords:["connectivity","connectors","account delete"],description:"Remove account from a source.",slug:"/connectivity/saas-connectivity/commands/account-delete",tags:["Connectivity","Connector Command"]},sidebar:"openApiSidebar",previous:{title:"Account Create",permalink:"/docs/connectivity/saas-connectivity/commands/account-create"},next:{title:"Account Disable",permalink:"/docs/connectivity/saas-connectivity/commands/account-disable"}},h={},k=[{value:"Example StdAccountDeleteInput",id:"example-stdaccountdeleteinput",level:3},{value:"Example StdAccountDeleteOutput",id:"example-stdaccountdeleteoutput",level:3},{value:"Description",id:"description",level:2}],f={toc:k},g="wrapper";function A(t){var e=t,{components:n}=e,o=m(e,["components"]);return(0,a.kt)(g,p(u(u({},f),o),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",u({parentName:"tr"},{align:"left"}),"Input/Output"),(0,a.kt)("th",u({parentName:"tr"},{align:"center"}),"Data Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:"left"}),"Input"),(0,a.kt)("td",u({parentName:"tr"},{align:"center"}),"StdAccountDeleteInput")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",u({parentName:"tr"},{align:"left"}),"Output"),(0,a.kt)("td",u({parentName:"tr"},{align:"center"}),"StdAccountDeleteOutput")))),(0,a.kt)("h3",u({},{id:"example-stdaccountdeleteinput"}),"Example StdAccountDeleteInput"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-javascript"}),'{\n    "identity": "john.doe",\n    "key": {\n        "simple": {\n            "id": "john.doe"\n        }\n    }\n}\n')),(0,a.kt)("h3",u({},{id:"example-stdaccountdeleteoutput"}),"Example StdAccountDeleteOutput"),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-javascript"}),"{\n}\n")),(0,a.kt)("h2",u({},{id:"description"}),"Description"),(0,a.kt)("p",null,"The account delete command sends one attribute from ISC, the identity to delete. This can be passed to your connector to delete the account from the source system."),(0,a.kt)("p",null,"Enable account delete in ISC through a BeforeProvisioning rule. The connector honors whichever operation the provisioning plan sends. For more information, see the ","[documentation]","(",(0,a.kt)("a",u({parentName:"p"},{href:"https://community.sailpoint.com/t5/Identity"}),"https://community.sailpoint.com/t5/Identity")," Security Cloud-Articles/Identity Security Cloud-Rule-Guide/ta-p/76665) and an ","[example implementation]","(",(0,a.kt)("a",u({parentName:"p"},{href:"https://community.sailpoint.com/t5/Identity"}),"https://community.sailpoint.com/t5/Identity")," Security Cloud-Wiki/Identity Security Cloud-Rule-Guide-Before-Provisioning-Rule/ta-p/77415)."),(0,a.kt)("p",null,"To use this command, you must specify this value in the ",(0,a.kt)("inlineCode",{parentName:"p"},"commands")," array: ",(0,a.kt)("inlineCode",{parentName:"p"},"std:account:delete")),(0,a.kt)("p",null,"The following snippet shows an example of account delete command implementation:"),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/index.ts"}),"index.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-javascript"}),".stdAccountDelete(async (context: Context, input: StdAccountDeleteInput, res: Response<StdAccountDeleteOutput>) => {\n    const account = await airtable.getAccount(input.key)\n    res.send(await airtable.deleteAccount(account.airtableId))\n})\n")),(0,a.kt)("p",null,(0,a.kt)("a",u({parentName:"p"},{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/airtable.ts"}),"airtable.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",u({parentName:"pre"},{className:"language-javascript"}),"async deleteAccount(airTableid: string): Promise<Record<string, never>> {\n    return this.airTableBase('Users').destroy(airTableid,\n    ).then(() => {\n        return {}\n    }).catch(err => {\n        throw new ConnectorError('error while deleting account: ' + err)\n    })\n}\n")))}A.isMDXComponent=!0}}]);