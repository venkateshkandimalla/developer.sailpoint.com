"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[13889],{4733:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>k,contentTitle:()=>g,default:()=>N,frontMatter:()=>b,metadata:()=>h,toc:()=>v});var n=a(3905),l=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=(e,t,a)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,d=(e,t)=>{for(var a in t||(t={}))u.call(t,a)&&p(e,a,t[a]);if(o)for(var a of o(t))s.call(t,a)&&p(e,a,t[a]);return e},c=(e,t)=>r(e,i(t)),m=(e,t)=>{var a={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&s.call(e,n)&&(a[n]=e[n]);return a};const b={id:"jdbc-buildmap-rule",title:"JDBC BuildMap Rule",pagination_label:"JDBC BuildMap Rule",sidebar_label:"JDBC BuildMap Rule",sidebar_class_name:"jdbcBuildMapRule",keywords:["cloud","rules"],description:"This rule manipulates raw input data provided by the rows and columns in a file and builds a map from the incoming data.",slug:"/extensibility/rules/connector-rules/jdbc-buildmap-rule",tags:["Rules"]},g=void 0,h={unversionedId:"extensibility/rules/connector-rules/jdbc-buildmap-rule",id:"extensibility/rules/connector-rules/jdbc-buildmap-rule",title:"JDBC BuildMap Rule",description:"This rule manipulates raw input data provided by the rows and columns in a file and builds a map from the incoming data.",source:"@site/docs/extensibility/rules/connector-rules/jdbc_build_map_rule.md",sourceDirName:"extensibility/rules/connector-rules",slug:"/extensibility/rules/connector-rules/jdbc-buildmap-rule",permalink:"/docs/extensibility/rules/connector-rules/jdbc-buildmap-rule",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/extensibility/rules/connector-rules/jdbc_build_map_rule.md",tags:[{label:"Rules",permalink:"/docs/tags/rules"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1720812556,formattedLastUpdatedAt:"Jul 12, 2024",frontMatter:{id:"jdbc-buildmap-rule",title:"JDBC BuildMap Rule",pagination_label:"JDBC BuildMap Rule",sidebar_label:"JDBC BuildMap Rule",sidebar_class_name:"jdbcBuildMapRule",keywords:["cloud","rules"],description:"This rule manipulates raw input data provided by the rows and columns in a file and builds a map from the incoming data.",slug:"/extensibility/rules/connector-rules/jdbc-buildmap-rule",tags:["Rules"]},sidebar:"openApiSidebar",previous:{title:"Before and After Operations",permalink:"/docs/extensibility/rules/connector-rules/before-and-after-rule-operations"},next:{title:"JDBC Provision Rule",permalink:"/docs/extensibility/rules/connector-rules/jdbc-provisioning-rule"}},k={},v=[{value:"Overview",id:"overview",level:2},{value:"Execution",id:"execution",level:2},{value:"Input",id:"input",level:2},{value:"Output",id:"output",level:2},{value:"Template",id:"template",level:2},{value:"Example",id:"example",level:2},{value:"Attach to Source",id:"attach-to-source",level:2}],f={toc:v},y="wrapper";function N(e){var t=e,{components:l}=t,r=m(t,["components"]);return(0,n.kt)(y,c(d(d({},f),r),{components:l,mdxType:"MDXLayout"}),(0,n.kt)("h2",d({},{id:"overview"}),"Overview"),(0,n.kt)("p",null,"This rule manipulates raw input data provided by the rows and columns in a file and builds a map from the incoming data."),(0,n.kt)("h2",d({},{id:"execution"}),"Execution"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Connector Execution")," - This rule executes within the virtual appliance. It may offer special abilities to perform connector-related functions, and it may offer managed connections to sources."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Logging")," - Logging statements are viewable within the ccg.log on the virtual appliance, and they are viewable by SailPoint personnel.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Rule Execution",src:a(88763).Z,width:"1525",height:"618"})),(0,n.kt)("h2",d({},{id:"input"}),"Input"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",d({parentName:"tr"},{align:null}),"Argument"),(0,n.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",d({parentName:"tr"},{align:null}),"Purpose"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",d({parentName:"tr"},{align:null}),"result"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"java.sql.ResultSet"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"Current ResultSet from the JDBC Connector.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",d({parentName:"tr"},{align:null}),"connection"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"java.sql.Connection"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"Reference to the current SQL connection.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",d({parentName:"tr"},{align:null}),"state"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"java.util.Map"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"Map that can be used to store and share data between executions of this rule during a single aggregation run.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",d({parentName:"tr"},{align:null}),"application"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"sailpoint.object.Application"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"Reference to the source JDBC Application.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",d({parentName:"tr"},{align:null}),"schema"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"sailpoint.object.Schema"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"Reference to the schema object for the JDBC source being read.")))),(0,n.kt)("h2",d({},{id:"output"}),"Output"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",d({parentName:"tr"},{align:null}),"Argument"),(0,n.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,n.kt)("th",d({parentName:"tr"},{align:null}),"Purpose"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",d({parentName:"tr"},{align:null}),"map"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"java.util.Map"),(0,n.kt)("td",d({parentName:"tr"},{align:null}),"Map of names/values representing a row of data from the JDBC resource.")))),(0,n.kt)("h2",d({},{id:"template"}),"Template"),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-xml"}),'<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">\n<Rule name="Example Rule" type="JDBCBuildMap">\n  <Description>Describe your rule here.</Description>\n  <Source><![CDATA[\n\n  // Add your logic here.\n\n  ]]></Source>\n</Rule>\n')),(0,n.kt)("h2",d({},{id:"example"}),"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-java"}),'<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">\n<Rule name="Example Rule" type="JDBCBuildMap">\n  <Description>\nThis basic rule performs the default mapping and then replaces the \u201cstatus\u201d value read from the database with a\nBoolean \u201cinactive\u201d attribute in the map.\n</Description>\n  <Source><![CDATA[\n\n     import sailpoint.connector.*;\n\n     Map map = JDBCConnector.buildMapFromResultSet(result, schema);\n\n     String status = (String) map.get("status");\n\n     if( "inactive".equals(status) ) {\n\n          map.put("inactive", true);\n\n     } else {\n\n          map.put("inactive", false);\n\n     }\n\n     map.remove("status");\n\n     return map;\n\n\n  ]]></Source>\n</Rule>\n')),(0,n.kt)("h2",d({},{id:"attach-to-source"}),"Attach to Source"),(0,n.kt)("p",null,"Refer to ",(0,n.kt)("a",d({parentName:"p"},{href:"/docs/extensibility/rules/connector-rules#jdbcbuildmap-rule"}),"Attaching Connector-Related Rules to Sources")," for details on how to attach your rule to your source."))}N.isMDXComponent=!0},88763:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/connector_execution-da1c6db87e6d1b2b8d1f5398ce2f3501.png"}}]);